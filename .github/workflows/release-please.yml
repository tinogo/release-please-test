name: release-please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          # @see https://github.com/googleapis/release-please/blob/main/docs/manifest-releaser.md#configfile
          config-file: release-please-config.json
          # This file is maintained by release-please itself!
          manifest-file: .release-please-manifest.json
          token: ${{ github.token }}

      - name: Clone main repository
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config --global user.email "norepl@github.com"
          git config --global user.name "GitHub Actions Bot"
          git config advice.skippedCherryPicks false

      - name: 'Create merge branch: main --> develop'
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git checkout -b release/merge-main-into-develop
          git rebase main
          git pull -r origin develop
          git push --set-upstream origin release/merge-main-into-develop --force

      - name: Create PR
        if: ${{ steps.release.outputs.release_created }}
        run: |
          (gh pr --repo $GITHUB_REPOSITORY create --fill --title "chore(main): Merge changes from main into develop" --base develop) || exit 0
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Enable auto-merge for the PR
        if: ${{ steps.release.outputs.release_created }}
        run: |
          gh pr --repo $GITHUB_REPOSITORY review release/merge-main-into-develop --approve
          gh pr --repo $GITHUB_REPOSITORY merge release/merge-main-into-develop --auto --merge
        env:
          # the approver of a PR can not be the same user as the creator of the PR.
          # That's why we are sticking with the default runner user here
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
